import streamlit as st
import cv2
import tempfile
from controller import controller
from datetime import datetime
# def show_detection_view():
#     st.title("D√©tection d'activit√©")

#     # Exemples d'activit√©s et r√©sultats
#     activity = st.selectbox("Choisir une activit√©", ["Squat", "Push-up", "shoulder_press",'barbell_bieceps_curl'])
#     prediction = st.text_input("R√©sultat de la d√©tection", "Bonne ex√©cution")

#     if st.button("Sauvegarder la d√©tection"):
#         now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
#         controller.save_detection_result(activity, prediction, now)
#         st.success("R√©sultat enregistr√© dans la base de donn√©es.")
def show_detection():
 st.title("üß† Interface Reconnaissance & Correction d'Activit√©")

 mode = st.radio("Choisissez le mode :", ["Vid√©o Upload", "Cam√©ra Temps R√©el"])

 if mode == "Vid√©o Upload":
    uploaded_file = st.file_uploader("üìÇ T√©l√©verser une vid√©o", type=["mp4", "avi"])
    if uploaded_file:
        with tempfile.NamedTemporaryFile(delete=False) as tmp:
            tmp.write(uploaded_file.read())
            video_path = tmp.name

        st.video(video_path)

        if st.button("Analyser"):
            st.info("üìä Analyse en cours...")
            activity_summary = controller.detect_activity(video_path)
            st.subheader("üìä R√©sum√© des Activit√©s D√©tect√©es")
            for activity, count in activity_summary.items():
                 st.write(f"**{activity}** : {count} fois")
        

 else:
  if st.button("Analyser"):
    activity = controller.detect_activity(0)
    st.success("‚úÖ Analyse termin√©e")
    st.subheader("üïµÔ∏è Activit√© d√©tect√©e :")
    st.write(activity)
 return
